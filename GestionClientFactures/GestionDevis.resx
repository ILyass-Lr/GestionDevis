<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Imprimer_Button.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>